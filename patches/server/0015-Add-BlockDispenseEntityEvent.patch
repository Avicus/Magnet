From f0cc768fed93e3f1f7f55992a44a3b24b469ee90 Mon Sep 17 00:00:00 2001
From: Austin Mayes <austin@avicus.net>
Date: Fri, 23 Dec 2016 04:07:10 -0600
Subject: [PATCH] Add BlockDispenseEntityEvent

---
 .../net/minecraft/server/DispenseBehaviorItem.java |  8 ++--
 .../server/DispenseBehaviorProjectile.java         |  4 +-
 .../net/minecraft/server/DispenserRegistry.java    | 51 ++++++++++++++--------
 .../java/net/minecraft/server/ItemMinecart.java    | 10 +++--
 .../org/bukkit/craftbukkit/entity/CraftEntity.java |  7 +++
 5 files changed, 53 insertions(+), 27 deletions(-)

diff --git a/src/main/java/net/minecraft/server/DispenseBehaviorItem.java b/src/main/java/net/minecraft/server/DispenseBehaviorItem.java
index 35a3ff8..8db2f08 100644
--- a/src/main/java/net/minecraft/server/DispenseBehaviorItem.java
+++ b/src/main/java/net/minecraft/server/DispenseBehaviorItem.java
@@ -2,6 +2,7 @@ package net.minecraft.server;
 
 // CraftBukkit start
 import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.block.BlockDispenseEntityEvent;
 import org.bukkit.event.block.BlockDispenseEvent;
 // CraftBukkit end
 
@@ -58,7 +59,7 @@ public class DispenseBehaviorItem implements IDispenseBehavior {
         org.bukkit.block.Block block = world.getWorld().getBlockAt(isourceblock.getBlockPosition().getX(), isourceblock.getBlockPosition().getY(), isourceblock.getBlockPosition().getZ());
         CraftItemStack craftItem = CraftItemStack.asCraftMirror(itemstack);
 
-        BlockDispenseEvent event = new BlockDispenseEvent(block, craftItem.clone(), new org.bukkit.util.Vector(entityitem.motX, entityitem.motY, entityitem.motZ));
+        BlockDispenseEntityEvent event = new BlockDispenseEntityEvent(block, craftItem.clone(), entityitem.getBukkitEntity());
         if (!BlockDispenser.eventFired) {
             world.getServer().getPluginManager().callEvent(event);
         }
@@ -68,9 +69,8 @@ public class DispenseBehaviorItem implements IDispenseBehavior {
         }
 
         entityitem.setItemStack(CraftItemStack.asNMSCopy(event.getItem()));
-        entityitem.motX = event.getVelocity().getX();
-        entityitem.motY = event.getVelocity().getY();
-        entityitem.motZ = event.getVelocity().getZ();
+        entityitem.getBukkitEntity().setLocationDirect(event.getLocation());
+        entityitem.getBukkitEntity().setVelocity(event.getVelocity());
 
         if (!event.getItem().getType().equals(craftItem.getType())) {
             // Chain to handler for new item
diff --git a/src/main/java/net/minecraft/server/DispenseBehaviorProjectile.java b/src/main/java/net/minecraft/server/DispenseBehaviorProjectile.java
index 5cb0363..4accb2d 100644
--- a/src/main/java/net/minecraft/server/DispenseBehaviorProjectile.java
+++ b/src/main/java/net/minecraft/server/DispenseBehaviorProjectile.java
@@ -2,6 +2,7 @@ package net.minecraft.server;
 
 // CraftBukkit start
 import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.block.BlockDispenseEntityEvent;
 import org.bukkit.event.block.BlockDispenseEvent;
 // CraftBukkit end
 
@@ -21,7 +22,7 @@ public abstract class DispenseBehaviorProjectile extends DispenseBehaviorItem {
         org.bukkit.block.Block block = world.getWorld().getBlockAt(isourceblock.getBlockPosition().getX(), isourceblock.getBlockPosition().getY(), isourceblock.getBlockPosition().getZ());
         CraftItemStack craftItem = CraftItemStack.asCraftMirror(itemstack1);
 
-        BlockDispenseEvent event = new BlockDispenseEvent(block, craftItem.clone(), new org.bukkit.util.Vector((double) enumdirection.getAdjacentX(), (double) ((float) enumdirection.getAdjacentY() + 0.1F), (double) enumdirection.getAdjacentZ()));
+        BlockDispenseEntityEvent event = new BlockDispenseEntityEvent(block, craftItem.clone(), ((Entity) iprojectile).getBukkitEntity(), ((Entity) iprojectile).getBukkitEntity().getLocation(), new org.bukkit.util.Vector((double) enumdirection.getAdjacentX(), (double) ((float) enumdirection.getAdjacentY() + 0.1F), (double) enumdirection.getAdjacentZ()));
         if (!BlockDispenser.eventFired) {
             world.getServer().getPluginManager().callEvent(event);
         }
@@ -42,6 +43,7 @@ public abstract class DispenseBehaviorProjectile extends DispenseBehaviorItem {
             }
         }
 
+        ((Entity) iprojectile).getBukkitEntity().setLocationDirect(event.getLocation());
         iprojectile.shoot(event.getVelocity().getX(), event.getVelocity().getY(), event.getVelocity().getZ(), this.getPower(), this.a());
         ((Entity) iprojectile).projectileSource = new org.bukkit.craftbukkit.projectiles.CraftBlockProjectileSource((TileEntityDispenser) isourceblock.getTileEntity());
         // CraftBukkit end
diff --git a/src/main/java/net/minecraft/server/DispenserRegistry.java b/src/main/java/net/minecraft/server/DispenserRegistry.java
index cc7a1e3..873fcc3 100644
--- a/src/main/java/net/minecraft/server/DispenserRegistry.java
+++ b/src/main/java/net/minecraft/server/DispenserRegistry.java
@@ -9,6 +9,8 @@ import org.apache.logging.log4j.Logger;
 
 // CraftBukkit start
 import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.entity.Fireball;
+import org.bukkit.event.block.BlockDispenseEntityEvent;
 import org.bukkit.event.block.BlockDispenseEvent;
 // CraftBukkit end
 
@@ -87,7 +89,14 @@ public class DispenserRegistry {
                 org.bukkit.block.Block block = world.getWorld().getBlockAt(isourceblock.getBlockPosition().getX(), isourceblock.getBlockPosition().getY(), isourceblock.getBlockPosition().getZ());
                 CraftItemStack craftItem = CraftItemStack.asCraftMirror(itemstack1);
 
-                BlockDispenseEvent event = new BlockDispenseEvent(block, craftItem.clone(), new org.bukkit.util.Vector(d0, d1, d2));
+                Entity entity = ItemMonsterEgg.spawnCreature(isourceblock.getWorld(), ItemMonsterEgg.getId(itemstack.getItem()), d0, d1, d2, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.DISPENSE_EGG);
+                if(entity == null) {
+                    // This happens if the spawn event is cancelled
+                    itemstack.count++;
+                    return itemstack;
+                }
+
+                BlockDispenseEntityEvent event = new BlockDispenseEntityEvent(block, craftItem.clone(), entity.getBukkitEntity());
                 if (!BlockDispenser.eventFired) {
                     world.getServer().getPluginManager().callEvent(event);
                 }
@@ -110,7 +119,8 @@ public class DispenserRegistry {
 
                 itemstack1 = CraftItemStack.asNMSCopy(event.getItem());
 
-                Entity entity = ItemMonsterEgg.spawnCreature(isourceblock.getWorld(), itemstack.getData(), event.getVelocity().getX(), event.getVelocity().getY(), event.getVelocity().getZ(), org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.DISPENSE_EGG);
+                entity.getBukkitEntity().setLocationDirect(event.getLocation());
+                entity.getBukkitEntity().setVelocity(event.getVelocity());
 
                 if (entity instanceof EntityLiving && itemstack.hasName()) {
                     ((EntityInsentient) entity).setCustomName(itemstack.getName());
@@ -133,7 +143,9 @@ public class DispenserRegistry {
                 org.bukkit.block.Block block = world.getWorld().getBlockAt(isourceblock.getBlockPosition().getX(), isourceblock.getBlockPosition().getY(), isourceblock.getBlockPosition().getZ());
                 CraftItemStack craftItem = CraftItemStack.asCraftMirror(itemstack1);
 
-                BlockDispenseEvent event = new BlockDispenseEvent(block, craftItem.clone(), new org.bukkit.util.Vector(d0, d1, d2));
+                EntityFireworks entityfireworks = new EntityFireworks(isourceblock.getWorld(), d0, d1, d2, itemstack);
+
+                BlockDispenseEntityEvent event = new BlockDispenseEntityEvent(block, craftItem.clone(), entityfireworks.getBukkitEntity());
                 if (!BlockDispenser.eventFired) {
                     world.getServer().getPluginManager().callEvent(event);
                 }
@@ -155,9 +167,9 @@ public class DispenserRegistry {
                 }
 
                 itemstack1 = CraftItemStack.asNMSCopy(event.getItem());
-                EntityFireworks entityfireworks = new EntityFireworks(isourceblock.getWorld(), event.getVelocity().getX(), event.getVelocity().getY(), event.getVelocity().getZ(), itemstack1);
+                EntityFireworks entityfireworks1 = new EntityFireworks(isourceblock.getWorld(), event.getVelocity().getX(), event.getVelocity().getY(), event.getVelocity().getZ(), itemstack1);
 
-                isourceblock.getWorld().addEntity(entityfireworks);
+                isourceblock.getWorld().addEntity(entityfireworks1);
                 // itemstack.a(1); // Handled during event processing
                 // CraftBukkit end
                 return itemstack;
@@ -185,7 +197,9 @@ public class DispenserRegistry {
                 org.bukkit.block.Block block = world.getWorld().getBlockAt(isourceblock.getBlockPosition().getX(), isourceblock.getBlockPosition().getY(), isourceblock.getBlockPosition().getZ());
                 CraftItemStack craftItem = CraftItemStack.asCraftMirror(itemstack1);
 
-                BlockDispenseEvent event = new BlockDispenseEvent(block, craftItem.clone(), new org.bukkit.util.Vector(d3, d4, d5));
+                EntitySmallFireball fireball = new EntitySmallFireball(world, d0, d1, d2, d3, d4, d5);
+
+                BlockDispenseEntityEvent event = new BlockDispenseEntityEvent(block, craftItem.clone(), fireball.getBukkitEntity(), fireball.getBukkitEntity().getLocation(), ((org.bukkit.entity.Fireball) fireball.getBukkitEntity()).getDirection());
                 if (!BlockDispenser.eventFired) {
                     world.getServer().getPluginManager().callEvent(event);
                 }
@@ -206,10 +220,10 @@ public class DispenserRegistry {
                     }
                 }
 
-                EntitySmallFireball entitysmallfireball = new EntitySmallFireball(world, d0, d1, d2, event.getVelocity().getX(), event.getVelocity().getY(), event.getVelocity().getZ());
-                entitysmallfireball.projectileSource = new org.bukkit.craftbukkit.projectiles.CraftBlockProjectileSource((TileEntityDispenser) isourceblock.getTileEntity());
+                fireball.getBukkitEntity().setLocationDirect(event.getLocation());
+                ((Fireball) fireball.getBukkitEntity()).setDirection(event.getVelocity()); // don't call the NMS version because it randomizes the value
 
-                world.addEntity(entitysmallfireball);
+                world.addEntity(fireball);
                 // itemstack.a(1); // Handled during event processing
                 // CraftBukkit end
                 return itemstack;
@@ -248,7 +262,9 @@ public class DispenserRegistry {
                 org.bukkit.block.Block block = world.getWorld().getBlockAt(isourceblock.getBlockPosition().getX(), isourceblock.getBlockPosition().getY(), isourceblock.getBlockPosition().getZ());
                 CraftItemStack craftItem = CraftItemStack.asCraftMirror(itemstack1);
 
-                BlockDispenseEvent event = new BlockDispenseEvent(block, craftItem.clone(), new org.bukkit.util.Vector(d0, d1 + d3, d2));
+                EntityBoat entityboat = new EntityBoat(world, d0, d1 + d3, d2);
+
+                BlockDispenseEntityEvent event = new BlockDispenseEntityEvent(block, craftItem.clone(), entityboat.getBukkitEntity());
                 if (!BlockDispenser.eventFired) {
                     world.getServer().getPluginManager().callEvent(event);
                 }
@@ -269,8 +285,8 @@ public class DispenserRegistry {
                     }
                 }
 
-                EntityBoat entityboat = new EntityBoat(world, event.getVelocity().getX(), event.getVelocity().getY(), event.getVelocity().getZ());
-                // CraftBukkit end
+                entityboat.getBukkitEntity().setLocationDirect(event.getLocation());
+                entityboat.getBukkitEntity().setVelocity(event.getVelocity());
 
                 world.addEntity(entityboat);
                 // itemstack.a(1); // CraftBukkit - handled during event processing
@@ -520,11 +536,9 @@ public class DispenserRegistry {
                 org.bukkit.block.Block block = world.getWorld().getBlockAt(isourceblock.getBlockPosition().getX(), isourceblock.getBlockPosition().getY(), isourceblock.getBlockPosition().getZ());
                 CraftItemStack craftItem = CraftItemStack.asCraftMirror(itemstack1);
 
-                // PaperSpigot start - Fix cannons
-                double y = blockposition.getY();
-                if (!world.paperSpigotConfig.fixCannons) y += 0.5;
-                BlockDispenseEvent event = new BlockDispenseEvent(block, craftItem.clone(), new org.bukkit.util.Vector(blockposition.getX() + 0.5, y, blockposition.getZ() + 0.5));
-                // PaperSpigot end
+                EntityTNTPrimed entitytntprimed = new EntityTNTPrimed(block.getLocation() ,world, (double) blockposition.getX() + 0.5D, (double) blockposition.getY(), (double) blockposition.getZ() + 0.5D, (EntityLiving) null);
+
+                BlockDispenseEntityEvent event = new BlockDispenseEntityEvent(block, craftItem.clone(), entitytntprimed.getBukkitEntity());// PaperSpigot end
                 if (!BlockDispenser.eventFired) {
                    world.getServer().getPluginManager().callEvent(event);
                 }
@@ -545,7 +559,8 @@ public class DispenserRegistry {
                     }
                 }
 
-                EntityTNTPrimed entitytntprimed = new EntityTNTPrimed(block.getLocation(), world, event.getVelocity().getX(), event.getVelocity().getY(), event.getVelocity().getZ(), (EntityLiving) null); // PaperSpigot
+                entitytntprimed.getBukkitEntity().setLocationDirect(event.getLocation());
+                entitytntprimed.getBukkitEntity().setVelocity(event.getVelocity());
                 // CraftBukkit end
 
                 world.addEntity(entitytntprimed);
diff --git a/src/main/java/net/minecraft/server/ItemMinecart.java b/src/main/java/net/minecraft/server/ItemMinecart.java
index e9fc40e..49a72f0 100644
--- a/src/main/java/net/minecraft/server/ItemMinecart.java
+++ b/src/main/java/net/minecraft/server/ItemMinecart.java
@@ -2,6 +2,7 @@ package net.minecraft.server;
 
 // CraftBukkit start
 import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.block.BlockDispenseEntityEvent;
 import org.bukkit.event.block.BlockDispenseEvent;
 // CraftBukkit end
 
@@ -43,12 +44,12 @@ public class ItemMinecart extends Item {
             }
 
             // CraftBukkit start
-            // EntityMinecartAbstract entityminecartabstract = EntityMinecartAbstract.a(world, d0, d1 + d3, d2, ((ItemMinecart) itemstack.getItem()).b);
+            EntityMinecartAbstract entityminecartabstract = EntityMinecartAbstract.a(world, d0, d1 + d3, d2, ((ItemMinecart) itemstack.getItem()).b);
             ItemStack itemstack1 = itemstack.cloneAndSubtract(1);
             org.bukkit.block.Block block2 = world.getWorld().getBlockAt(isourceblock.getBlockPosition().getX(), isourceblock.getBlockPosition().getY(), isourceblock.getBlockPosition().getZ());
             CraftItemStack craftItem = CraftItemStack.asCraftMirror(itemstack1);
 
-            BlockDispenseEvent event = new BlockDispenseEvent(block2, craftItem.clone(), new org.bukkit.util.Vector(d0, d1 + d3, d2));
+            BlockDispenseEntityEvent event = new BlockDispenseEntityEvent(block2, craftItem.clone(), entityminecartabstract.getBukkitEntity());
             if (!BlockDispenser.eventFired) {
                 world.getServer().getPluginManager().callEvent(event);
             }
@@ -69,8 +70,9 @@ public class ItemMinecart extends Item {
                 }
             }
 
-            itemstack1 = CraftItemStack.asNMSCopy(event.getItem());
-            EntityMinecartAbstract entityminecartabstract = EntityMinecartAbstract.a(world, event.getVelocity().getX(), event.getVelocity().getY(), event.getVelocity().getZ(), ((ItemMinecart) itemstack1.getItem()).b);
+            entityminecartabstract.getBukkitEntity().setLocationDirect(event.getBlock().getLocation());
+            entityminecartabstract.getBukkitEntity().setVelocity(event.getVelocity());
+
 
             if (itemstack.hasName()) {
                 entityminecartabstract.setCustomName(itemstack.getName());
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
index 4f91799..a2223e4 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
@@ -201,6 +201,13 @@ public abstract class CraftEntity implements org.bukkit.entity.Entity {
         return loc;
     }
 
+    /**
+     * Passively set location (internal use only)
+     */
+    public void setLocationDirect(Location location) {
+        getHandle().setLocation(location.getX(), location.getY(), location.getZ(), location.getYaw(), location.getPitch());
+    }
+
     public Vector getVelocity() {
         return new Vector(entity.motX, entity.motY, entity.motZ);
     }
-- 
2.6.4

