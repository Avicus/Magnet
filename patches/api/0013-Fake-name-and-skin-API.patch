From 58a13e07ead97814a980f4e64ac8434b4d8f176c Mon Sep 17 00:00:00 2001
From: Jedediah Smith <jedediah@silencegreys.com>
Date: Thu, 23 Jan 2014 00:17:31 -0500
Subject: [PATCH] Fake name and skin API

---
 src/main/java/org/bukkit/Bukkit.java               |  23 +++-
 src/main/java/org/bukkit/Server.java               |  27 +++++
 src/main/java/org/bukkit/Skin.java                 |  72 ++++++++++++
 src/main/java/org/bukkit/command/Command.java      |   2 +-
 .../java/org/bukkit/command/CommandSender.java     |   6 +
 .../org/bukkit/command/defaults/ListCommand.java   |   2 +-
 .../org/bukkit/command/defaults/TellCommand.java   |   3 +-
 src/main/java/org/bukkit/entity/Player.java        | 122 +++++++++++++++++++++
 .../event/player/PlayerSkinPartsChangeEvent.java   |  32 ++++++
 9 files changed, 285 insertions(+), 4 deletions(-)
 create mode 100644 src/main/java/org/bukkit/Skin.java
 create mode 100644 src/main/java/org/bukkit/event/player/PlayerSkinPartsChangeEvent.java

diff --git a/src/main/java/org/bukkit/Bukkit.java b/src/main/java/org/bukkit/Bukkit.java
index 1bde563f..dbf73c94 100644
--- a/src/main/java/org/bukkit/Bukkit.java
+++ b/src/main/java/org/bukkit/Bukkit.java
@@ -1168,7 +1168,7 @@ public final class Bukkit {
     public static CommandMap getCommandMap() {
         return server.getCommandMap();
     }
-    // Paper end
+    // Paper endListCommand
 
     public static Server.Spigot spigot()
     {
@@ -1185,5 +1185,26 @@ public final class Bukkit {
     public static void broadcast(net.avicus.magnet.api.text.translation.TranslatableComponent translatable) {
         server.broadcast(translatable);
     }
+
+    /**
+     * @see Server#getPlayer(String, CommandSender)
+     */
+    public static Player getPlayer(String name, CommandSender viewer) {
+        return server.getPlayer(name, viewer);
+    }
+
+    /**
+     * @see Server#getPlayerExact(String, CommandSender)
+     */
+    public static Player getPlayerExact(String name, CommandSender viewer) {
+        return server.getPlayerExact(name, viewer);
+    }
+
+    /**
+     * @see Server#matchPlayer(String, CommandSender)
+     */
+    public static List<Player> matchPlayer(String name, CommandSender viewer) {
+        return server.matchPlayer(name, viewer);
+    }
     // Magnet end
 }
diff --git a/src/main/java/org/bukkit/Server.java b/src/main/java/org/bukkit/Server.java
index 666c4bc8..a9a81108 100644
--- a/src/main/java/org/bukkit/Server.java
+++ b/src/main/java/org/bukkit/Server.java
@@ -1042,5 +1042,32 @@ public interface Server extends PluginMessageRecipient {
             player.sendMessage(translatable.translate(player.getLocale()));
         }
     }
+
+    /**
+     * Fake name aware version of {@link #getPlayer(String)}.
+     *
+     * @param name the name to lookup
+     * @param viewer the viewer
+     * @return a player if one was found, null otherwise
+     */
+    Player getPlayer(String name, CommandSender viewer);
+
+    /**
+     * Fake name aware version of {@link #getPlayerExact(String)}.
+     *
+     * @param name the name to lookup
+     * @param viewer the viewer
+     * @return a player if one was found, null otherwise
+     */
+    Player getPlayerExact(String name, CommandSender viewer);
+
+    /**
+     * Fake name aware version of {@link #matchPlayer(String)}.
+     *
+     * @param name the name to lookup
+     * @param viewer the viewer
+     * @return a list of all matched players
+     */
+    List<Player> matchPlayer(String name, CommandSender viewer);
     // Magnet end
 }
diff --git a/src/main/java/org/bukkit/Skin.java b/src/main/java/org/bukkit/Skin.java
new file mode 100644
index 00000000..e79a60cb
--- /dev/null
+++ b/src/main/java/org/bukkit/Skin.java
@@ -0,0 +1,72 @@
+package org.bukkit;
+
+/**
+ * A self-contained skin
+ */
+public class Skin {
+
+    public static final Skin EMPTY = new Skin(null, null);
+    private final String data;
+    private final String signature;
+
+    public Skin(String data, String signature) {
+        this.data = data;
+        this.signature = signature;
+    }
+
+    /**
+     * Return the base64 encoded data for this skin, or null if this
+     * is the empty skin i.e. Steve/Alex
+     */
+    public String getData() {
+        return this.data;
+    }
+
+    /**
+     * Return the base64 encoded signature for this skin, or null if
+     * this skin has no signature
+     */
+    public String getSignature() {
+        return this.signature;
+    }
+
+    /**
+     * Return true if this is the empty skin i.e. Steve/Alex
+     */
+    public boolean isEmpty() {
+        return this.data == null;
+    }
+
+    @Override
+    public boolean equals(Object o) {
+        if(this == o) {
+            return true;
+        }
+        if(!(o instanceof Skin)) {
+            return false;
+        }
+        Skin skin = (Skin) o;
+        if(this.data != null ? !this.data.equals(skin.data) : skin.data != null) {
+            return false;
+        }
+        return this.signature != null ? this.signature.equals(skin.signature) : skin.signature == null;
+    }
+
+    @Override
+    public int hashCode() {
+        int result = this.data != null ? this.data.hashCode() : 0;
+        result = 31 * result + (this.signature != null ? this.signature.hashCode() : 0);
+        return result;
+    }
+
+    // NOTE: ordinals must match bit positions in packet data
+    public enum Part {
+        CAPE,
+        JACKET,
+        LEFT_SLEEVE,
+        RIGHT_SLEEVE,
+        LEFT_PANTS_LEG,
+        RIGHT_PANTS_LEG,
+        HAT
+    }
+}
diff --git a/src/main/java/org/bukkit/command/Command.java b/src/main/java/org/bukkit/command/Command.java
index c126a1e7..ac8837dc 100644
--- a/src/main/java/org/bukkit/command/Command.java
+++ b/src/main/java/org/bukkit/command/Command.java
@@ -100,7 +100,7 @@ public abstract class Command {
 
         ArrayList<String> matchedPlayers = new ArrayList<String>();
         for (Player player : sender.getServer().getOnlinePlayers()) {
-            String name = player.getName();
+            String name = player.getName(sender);
             if ((senderPlayer == null || senderPlayer.canSee(player)) && StringUtil.startsWithIgnoreCase(name, lastWord)) {
                 matchedPlayers.add(name);
             }
diff --git a/src/main/java/org/bukkit/command/CommandSender.java b/src/main/java/org/bukkit/command/CommandSender.java
index a9b11f0a..4d33f607 100644
--- a/src/main/java/org/bukkit/command/CommandSender.java
+++ b/src/main/java/org/bukkit/command/CommandSender.java
@@ -71,5 +71,11 @@ public interface CommandSender extends Permissible {
     default void sendMessage(net.avicus.magnet.api.text.translation.TranslatableComponent translatable) {
         this.sendMessage(translatable.translate(this.getLocale()));
     }
+
+    /**
+     * Return this sender's name as viewed by the given sender. Used by
+     * {@link org.bukkit.entity.Player}s to support fake names.
+     */
+    String getName(CommandSender viewer);
     // Magnet end
 }
diff --git a/src/main/java/org/bukkit/command/defaults/ListCommand.java b/src/main/java/org/bukkit/command/defaults/ListCommand.java
index ea62bee3..8442e03f 100644
--- a/src/main/java/org/bukkit/command/defaults/ListCommand.java
+++ b/src/main/java/org/bukkit/command/defaults/ListCommand.java
@@ -36,7 +36,7 @@ public class ListCommand extends VanillaCommand {
                 online.append(", ");
             }
 
-            online.append(player.getDisplayName());
+            online.append(player.getDisplayName(sender instanceof Player ? (Player) sender : null));
         }
 
         sender.sendMessage("There are " + players.size() + "/" + Bukkit.getMaxPlayers() + " players online:\n" + online.toString());
diff --git a/src/main/java/org/bukkit/command/defaults/TellCommand.java b/src/main/java/org/bukkit/command/defaults/TellCommand.java
index 2e5d811d..18731d4d 100644
--- a/src/main/java/org/bukkit/command/defaults/TellCommand.java
+++ b/src/main/java/org/bukkit/command/defaults/TellCommand.java
@@ -25,7 +25,8 @@ public class TellCommand extends VanillaCommand {
             return false;
         }
 
-        Player player = Bukkit.getPlayerExact(args[0]);
+        Player viewer = sender instanceof Player ? (Player) sender : null;
+        Player player = Bukkit.getPlayerExact(args[0], viewer);
 
         // If a player is hidden from the sender pretend they are offline
         if (player == null || (sender instanceof Player && !((Player) sender).canSee(player))) {
diff --git a/src/main/java/org/bukkit/entity/Player.java b/src/main/java/org/bukkit/entity/Player.java
index 4282f2e2..d3ddcdd4 100644
--- a/src/main/java/org/bukkit/entity/Player.java
+++ b/src/main/java/org/bukkit/entity/Player.java
@@ -1363,5 +1363,127 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      * @param components the components to send
      */
     void sendMessage(net.md_5.bungee.api.ChatMessageType type, net.md_5.bungee.api.chat.BaseComponent[] components);
+
+    /**
+     * Set a fake name for this player when viewed by the given player.
+     * If the name is null then the fake name is cleared.
+     */
+    void setFakeName(CommandSender viewer, String name);
+
+    /**
+     * Return this player's fake name for the given viewer,
+     * or null if no fake name is set for that viewer
+     */
+    String getFakeName(CommandSender viewer);
+
+    /**
+     * Test if this player has a fake name set for the given viewer
+     */
+    boolean hasFakeName(CommandSender viewer);
+
+    /**
+     * Clear this player's fake names for all viewers
+     */
+    void clearFakeNames();
+
+    /**
+     * Set a fake display name for this player when viewed by the given player.
+     * If the name is null then the fake name is cleared.
+     */
+    void setFakeDisplayName(CommandSender viewer, String name);
+
+    /**
+     * Return this player's fake display name for the given viewer,
+     * or null if no fake name is set for that viewer
+     */
+    String getFakeDisplayName(CommandSender viewer);
+
+    /**
+     * Test if this player has a fake display name set for the given viewer
+     */
+    boolean hasFakeDisplayName(CommandSender viewer);
+
+    /**
+     * Clear this player's fake display names for all viewers
+     */
+    void clearFakeDisplayNames();
+
+    /**
+     * Return this player's list name as viewed by the given player, fake or not
+     */
+    String getPlayerListName(CommandSender viewer);
+
+    /**
+     * Return this player's display name as viewed by the given player, fake or not
+     */
+    String getDisplayName(CommandSender viewer);
+
+    /**
+     * Test if this Player has a fake skin set for the given viewer
+     */
+    boolean hasFakeSkin(CommandSender viewer);
+
+    /**
+     * Return the {@link org.bukkit.Skin} that the given viewer sees on this player,
+     * or null if the viewer can see this player's real skin.
+     */
+    org.bukkit.Skin getFakeSkin(CommandSender viewer);
+
+    /**
+     * Set the {@link org.bukkit.Skin} that the given viewer will see on this player.
+     * If null is given for the skin, any fake skin for the given viewer
+     * will be removed and they will see this player's real skin.
+     */
+    void setFakeSkin(CommandSender viewer, org.bukkit.Skin newSkin);
+
+    /**
+     * Clear any fake {@link org.bukkit.Skin}s set on this player, so that all other
+     * players will see this player's real skin.
+     */
+    void clearFakeSkins();
+
+    /**
+     * Return the player's real {@link org.bukkit.Skin} i.e. the one they have
+     * uploaded to their Minecraft account.
+     */
+    org.bukkit.Skin getRealSkin();
+
+    /**
+     * Return this player's current global {@link org.bukkit.Skin}, which is what
+     * other players see as long as there is no fake skin set for them.
+     */
+    org.bukkit.Skin getSkin();
+
+    /**
+     * Return the {@link org.bukkit.Skin} that the given viewer sees on this player,
+     * which may be either their current global skin or a fake skin.
+     */
+    org.bukkit.Skin getSkin(CommandSender viewer);
+
+    /**
+     * Set this player's {@link org.bukkit.Skin}, which will be visible to
+     * all players who do not have a fake skin set. Passing null
+     * as the skin will reset the player's skin to their real one.
+     */
+    void setSkin(org.bukkit.Skin newSkin);
+
+    /**
+     * Get the set of skin parts that are currently visible on the player
+     */
+    java.util.Set<org.bukkit.Skin.Part> getSkinParts();
+
+    /**
+     * Simultaneously set this player's fake name and {@link org.bukkit.Skin} for the given viewer.
+     * This method only refreshes the player entity once, whereas calling
+     * {@link #setFakeName} and {@link #setFakeSkin} seperately would refresh it twice.
+     */
+    void setFakeNameAndSkin(CommandSender viewer, String name, org.bukkit.Skin skin);
+
+    /**
+     * Simultaneously clear any fake names or {@link org.bukkit.Skin}s set on this player.
+     * This method only refreshes the player entity once, whereas calling
+     * {@link #clearFakeNames} and {@link #clearFakeSkins} seperately would refresh it twice.
+     */
+    void clearFakeNamesAndSkins();
     // Magnet end
 }
diff --git a/src/main/java/org/bukkit/event/player/PlayerSkinPartsChangeEvent.java b/src/main/java/org/bukkit/event/player/PlayerSkinPartsChangeEvent.java
new file mode 100644
index 00000000..a199f8cf
--- /dev/null
+++ b/src/main/java/org/bukkit/event/player/PlayerSkinPartsChangeEvent.java
@@ -0,0 +1,32 @@
+package org.bukkit.event.player;
+
+import org.bukkit.Skin;
+import org.bukkit.entity.Player;
+import org.bukkit.event.HandlerList;
+
+import java.util.Set;
+
+public class PlayerSkinPartsChangeEvent extends PlayerEvent {
+
+    private final Set<Skin.Part> parts;
+
+    public PlayerSkinPartsChangeEvent(Player who, Set<Skin.Part> parts) {
+        super(who);
+        this.parts = parts;
+    }
+
+    public Set<Skin.Part> getParts() {
+        return this.parts;
+    }
+
+    private static final HandlerList handlers = new HandlerList();
+
+    @Override
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+}
-- 
2.11.0

